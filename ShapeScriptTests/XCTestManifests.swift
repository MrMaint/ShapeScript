#if !canImport(ObjectiveC)
import XCTest

extension InterpreterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InterpreterTests = [
        ("testColorWidthLookup", testColorWidthLookup),
        ("testCumulativePosition", testCumulativePosition),
        ("testInvokeBuilderWithoutBlock", testInvokeBuilderWithoutBlock),
        ("testInvokeDefineWithoutBlock", testInvokeDefineWithoutBlock),
        ("testInvokeDyadicFunction", testInvokeDyadicFunction),
        ("testInvokeDyadicFunctionWithNoArgs", testInvokeDyadicFunctionWithNoArgs),
        ("testInvokeDyadicFunctionWithOneArg", testInvokeDyadicFunctionWithOneArg),
        ("testInvokeDyadicFunctionWithThreeArgs", testInvokeDyadicFunctionWithThreeArgs),
        ("testInvokeGroupWithoutBlock", testInvokeGroupWithoutBlock),
        ("testInvokeMonadicFunction", testInvokeMonadicFunction),
        ("testInvokeMonadicFunctionWithNoArgs", testInvokeMonadicFunctionWithNoArgs),
        ("testInvokeMonadicFunctionWithTwoArgs", testInvokeMonadicFunctionWithTwoArgs),
        ("testInvokePrimitiveWithoutBlock", testInvokePrimitiveWithoutBlock),
        ("testNameInvalidAtRoot", testNameInvalidAtRoot),
        ("testNameInvalidInDefine", testNameInvalidInDefine),
        ("testOptionInvalidAtRoot", testOptionInvalidAtRoot),
        ("testOptionInvalidInPrimitive", testOptionInvalidInPrimitive),
        ("testOptionValidInDefine", testOptionValidInDefine),
        ("testOutOfBoundsTupleVectorLookup", testOutOfBoundsTupleVectorLookup),
        ("testPositionInvalidAtRoot", testPositionInvalidAtRoot),
        ("testPositionInvalidInDefine", testPositionInvalidInDefine),
        ("testPositionValidInBuilder", testPositionValidInBuilder),
        ("testPositionValidInCSG", testPositionValidInCSG),
        ("testPositionValidInGroup", testPositionValidInGroup),
        ("testPositionValidInPrimitive", testPositionValidInPrimitive),
        ("testRandomNumberConsistency", testRandomNumberConsistency),
        ("testSetBuilderName", testSetBuilderName),
        ("testSetCustomBlockName", testSetCustomBlockName),
        ("testSetCustomGroupBlockName", testSetCustomGroupBlockName),
        ("testSetGroupName", testSetGroupName),
        ("testSetPathBlockName", testSetPathBlockName),
        ("testSetPrimitiveName", testSetPrimitiveName),
        ("testTupleIAAlphaLookup", testTupleIAAlphaLookup),
        ("testTupleIAGreenLookup", testTupleIAGreenLookup),
        ("testTupleNonexistentLookup", testTupleNonexistentLookup),
        ("testTupleRGBAlphaLookup", testTupleRGBAlphaLookup),
        ("testTupleRGBARedLookup", testTupleRGBARedLookup),
        ("testTupleVectorLookup", testTupleVectorLookup),
    ]
}

extension LexerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LexerTests = [
        ("testDecimal", testDecimal),
        ("testDigit", testDigit),
        ("testInfixExpressionWithoutSpaces", testInfixExpressionWithoutSpaces),
        ("testInfixExpressionWithSpaces", testInfixExpressionWithSpaces),
        ("testInfixThenPrefixExpressionWithoutSpaces", testInfixThenPrefixExpressionWithoutSpaces),
        ("testInfixThenPrefixExpressionWithSpaces", testInfixThenPrefixExpressionWithSpaces),
        ("testInvalidIdentifier", testInvalidIdentifier),
        ("testInvalidIdentifier2", testInvalidIdentifier2),
        ("testLeadingDecimalPoint", testLeadingDecimalPoint),
        ("testLeadingSpace", testLeadingSpace),
        ("testLeadingZero", testLeadingZero),
        ("testLetters", testLetters),
        ("testLettersAndNumbers", testLettersAndNumbers),
        ("testLineRangeOfIndexAtEndOfInput", testLineRangeOfIndexAtEndOfInput),
        ("testLineRangeOfIndexAtEndOfLine", testLineRangeOfIndexAtEndOfLine),
        ("testLineRangeOfIndexAtStartOfInput", testLineRangeOfIndexAtStartOfInput),
        ("testLineRangeOfIndexAtStartOfLine", testLineRangeOfIndexAtStartOfLine),
        ("testMemberLookupOnExpression", testMemberLookupOnExpression),
        ("testMemberLookupOnIdentifier", testMemberLookupOnIdentifier),
        ("testMemberLookupWithLeadingSpace", testMemberLookupWithLeadingSpace),
        ("testMemberLookupWithTrailingSpace", testMemberLookupWithTrailingSpace),
        ("testMultidigit", testMultidigit),
        ("testMultipleTrailingLinebreaks", testMultipleTrailingLinebreaks),
        ("testPrefixExpression", testPrefixExpression),
        ("testTooManyDecimalPoints", testTooManyDecimalPoints),
        ("testTrailingDecimalPoint", testTrailingDecimalPoint),
        ("testTrailingSpace", testTrailingSpace),
        ("testTrailingSpaceAfterLinebreak", testTrailingSpaceAfterLinebreak),
        ("testTrailingSpaceBeforeLinebreak", testTrailingSpaceBeforeLinebreak),
        ("testTupleWithPrefixOperator", testTupleWithPrefixOperator),
        ("testZero", testZero),
    ]
}

extension ParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserTests = [
        ("testLeftAssociativity", testLeftAssociativity),
        ("testOperatorPrecedence", testOperatorPrecedence),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(InterpreterTests.__allTests__InterpreterTests),
        testCase(LexerTests.__allTests__LexerTests),
        testCase(ParserTests.__allTests__ParserTests),
    ]
}
#endif
